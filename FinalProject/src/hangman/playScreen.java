/**
 * Program Name: playScreen
 * File Name: playScreen
 * Programmers: Alex Cheng, Lily Cao
 * Date: August 8, 2019
 * Assignment: Unit 4, Assignment 3
 * Description: This program allows the user to play hangman.
 * On the play screen, the user can press start to begin the game. The program
 * automatically generates a random word/phrase, and outputs the total number of
 * letters it has. Each time the user guess a letter, they click on its button.
 * If the letter exists the word/phrase, it appears in its proper place in the
 * box. If it does not, a part of the hangman is drawn. If all six parts of the
 * hangman are drawn, the game is over, and the player loses. If the player guesses
 * the word, the game is over, and the player wins. The user can choose to restart
 * the game by pressing the start button.
 */


package hangman;


import java.io.FileNotFoundException;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JFrame;



public class playScreen extends javax.swing.JFrame {
    menuScreen menu;
    GameOver gameOver=new GameOver(this);
    String letter, wordSet; // letter holds the player's guessed letter; wordSet is the randomly generated word.
    boolean match, gameCont; // match checks for letter matches between player's guess and word; gameCont checks whether game should continue.
    private int wrong = 0; // Store the number of times the player has guessed incorrectly.
    private int lettersLeft; // Stores the number of letters left to guess in the chosen word.
    int wins=0;
    
    // Create variables for gallow and hangman images.
    ImageIcon gallow = new ImageIcon(getClass().getResource("Gallow.png"));
    ImageIcon hangman1 = new ImageIcon(getClass().getResource("HangmanPart1.png"));
    ImageIcon hangman2 = new ImageIcon(getClass().getResource("HangmanPart2.png"));
    ImageIcon hangman3 = new ImageIcon(getClass().getResource("HangmanPart3.png"));
    ImageIcon hangman4 = new ImageIcon(getClass().getResource("HangmanPart4.png"));
    ImageIcon hangman5 = new ImageIcon(getClass().getResource("HangmanPart5.png"));
    ImageIcon hangman6 = new ImageIcon(getClass().getResource("HangmanPart6.png"));
    
    
    /* This 2D arraylist contains lists of words, to be randomly selected and used
    in the game. The lists are split by the number of words in each element
    (ie. The first list has 1 word in each element, the second 2 words, etc.) */
    String[][] words = {{"hello", "arrangement", "colleague", "shallow", "grass", "fantastic", "dolphin", "water", "galaxy", "connection",
        "serendipity", "investment", "pumpkin", "ceremony", "civilian", "family", "talent", "thesis", "policy", "manner"},
        {"good day", "no thanks", "super duper", "bottom drawer", "older brother", "fish bowl", "giant spider", "random generator", "best friend",
        "piano player", "volleyball captain", "charm bracelet", "square one", "broken telephone", "golden sun", "rainy day", "jumping bean",
        "tiny mouse", "no words", "say cheese"}, {"how are you", "three cats sleep", "the dog barks", "can you see", "falling into place",
        "back to school", "easy as pie", "piece of cake", "up and down", "tug of war", "boy cries wolf", "wild goose chase", "the same page",
        "learn new things", "big red balloons", "learn computer programming", "nothing to change", "anything is possible", "please clean up",
        "cookes are round"}};
    
    // Temporary arraylist to store the hidden word.
    ArrayList<String> chosenWord = new ArrayList<String>();
    
    
    
    
    public playScreen(menuScreen in) throws FileNotFoundException{
        initComponents();
        menu=in;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        lblHangmanImage = new javax.swing.JLabel();
        lblHangmanText = new javax.swing.JLabel();
        btnA = new javax.swing.JButton();
        btnB = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        btnD = new javax.swing.JButton();
        btnE = new javax.swing.JButton();
        btnF = new javax.swing.JButton();
        btnG = new javax.swing.JButton();
        btnH = new javax.swing.JButton();
        btnI = new javax.swing.JButton();
        btnJ = new javax.swing.JButton();
        btnK = new javax.swing.JButton();
        btnL = new javax.swing.JButton();
        btnM = new javax.swing.JButton();
        btnN = new javax.swing.JButton();
        btnO = new javax.swing.JButton();
        btnP = new javax.swing.JButton();
        btnQ = new javax.swing.JButton();
        btnR = new javax.swing.JButton();
        btnS = new javax.swing.JButton();
        btnT = new javax.swing.JButton();
        btnU = new javax.swing.JButton();
        btnV = new javax.swing.JButton();
        btnW = new javax.swing.JButton();
        btnX = new javax.swing.JButton();
        btnY = new javax.swing.JButton();
        btnZ = new javax.swing.JButton();
        txtWordBox = new javax.swing.JTextField();
        btnStart = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHangmanImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman/Gallow.png"))); // NOI18N

        lblHangmanText.setText("Guess a Letter");

        btnA.setBackground(new java.awt.Color(153, 153, 153));
        btnA.setText("a");
        btnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAActionPerformed(evt);
            }
        });

        btnB.setBackground(new java.awt.Color(153, 153, 153));
        btnB.setText("b");
        btnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBActionPerformed(evt);
            }
        });

        btnC.setBackground(new java.awt.Color(153, 153, 153));
        btnC.setText("c");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        btnD.setBackground(new java.awt.Color(153, 153, 153));
        btnD.setText("d");
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });

        btnE.setBackground(new java.awt.Color(153, 153, 153));
        btnE.setText("e");
        btnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEActionPerformed(evt);
            }
        });

        btnF.setBackground(new java.awt.Color(153, 153, 153));
        btnF.setText("f");
        btnF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFActionPerformed(evt);
            }
        });

        btnG.setBackground(new java.awt.Color(153, 153, 153));
        btnG.setText("g");
        btnG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGActionPerformed(evt);
            }
        });

        btnH.setBackground(new java.awt.Color(153, 153, 153));
        btnH.setText("h");
        btnH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHActionPerformed(evt);
            }
        });

        btnI.setBackground(new java.awt.Color(153, 153, 153));
        btnI.setText("i");
        btnI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIActionPerformed(evt);
            }
        });

        btnJ.setBackground(new java.awt.Color(153, 153, 153));
        btnJ.setText("j");
        btnJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJActionPerformed(evt);
            }
        });

        btnK.setBackground(new java.awt.Color(153, 153, 153));
        btnK.setText("k");
        btnK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKActionPerformed(evt);
            }
        });

        btnL.setBackground(new java.awt.Color(153, 153, 153));
        btnL.setText("l");
        btnL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLActionPerformed(evt);
            }
        });

        btnM.setBackground(new java.awt.Color(153, 153, 153));
        btnM.setText("m");
        btnM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMActionPerformed(evt);
            }
        });

        btnN.setBackground(new java.awt.Color(153, 153, 153));
        btnN.setText("n");
        btnN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNActionPerformed(evt);
            }
        });

        btnO.setBackground(new java.awt.Color(153, 153, 153));
        btnO.setText("o");
        btnO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOActionPerformed(evt);
            }
        });

        btnP.setBackground(new java.awt.Color(153, 153, 153));
        btnP.setText("p");
        btnP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPActionPerformed(evt);
            }
        });

        btnQ.setBackground(new java.awt.Color(153, 153, 153));
        btnQ.setText("q");
        btnQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQActionPerformed(evt);
            }
        });

        btnR.setBackground(new java.awt.Color(153, 153, 153));
        btnR.setText("r");
        btnR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRActionPerformed(evt);
            }
        });

        btnS.setBackground(new java.awt.Color(153, 153, 153));
        btnS.setText("s");
        btnS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSActionPerformed(evt);
            }
        });

        btnT.setBackground(new java.awt.Color(153, 153, 153));
        btnT.setText("t");
        btnT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTActionPerformed(evt);
            }
        });

        btnU.setBackground(new java.awt.Color(153, 153, 153));
        btnU.setText("u");
        btnU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUActionPerformed(evt);
            }
        });

        btnV.setBackground(new java.awt.Color(153, 153, 153));
        btnV.setText("v");
        btnV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVActionPerformed(evt);
            }
        });

        btnW.setBackground(new java.awt.Color(153, 153, 153));
        btnW.setText("w");
        btnW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWActionPerformed(evt);
            }
        });

        btnX.setBackground(new java.awt.Color(153, 153, 153));
        btnX.setText("x");
        btnX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXActionPerformed(evt);
            }
        });

        btnY.setBackground(new java.awt.Color(153, 153, 153));
        btnY.setText("y");
        btnY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYActionPerformed(evt);
            }
        });

        btnZ.setBackground(new java.awt.Color(153, 153, 153));
        btnZ.setText("z");
        btnZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZActionPerformed(evt);
            }
        });

        txtWordBox.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnReturn.setText("Return to Menu");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btnStart))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHangmanText)
                                    .addComponent(txtWordBox, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblHangmanImage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnO)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnP, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnQ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnT)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnU)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnV)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnW)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnX)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnY)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnZ))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnG)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnH)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnJ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnK)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReturn)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btnStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblHangmanText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtWordBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnA)
                                    .addComponent(btnB)
                                    .addComponent(btnC)
                                    .addComponent(btnD)
                                    .addComponent(btnE)
                                    .addComponent(btnF)
                                    .addComponent(btnG)
                                    .addComponent(btnH)
                                    .addComponent(btnI)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnM)
                                .addComponent(btnL)
                                .addComponent(btnK)
                                .addComponent(btnJ))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblHangmanImage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReturn)))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnN)
                    .addComponent(btnO)
                    .addComponent(btnP)
                    .addComponent(btnQ)
                    .addComponent(btnR)
                    .addComponent(btnS)
                    .addComponent(btnT)
                    .addComponent(btnU)
                    .addComponent(btnV)
                    .addComponent(btnW)
                    .addComponent(btnX)
                    .addComponent(btnY)
                    .addComponent(btnZ))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Action taken when user presses "A" button.
    private void btnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAActionPerformed
        letter = btnA.getText(); // Get letter from button (a).
        btnA.setEnabled(false); // Disables button
        gamePlay(letter); // Calls gamePlay function to check matches, output them, and whether game continues or not.
    }//GEN-LAST:event_btnAActionPerformed

    // Action taken when user presses "B" button.
    private void btnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBActionPerformed
        letter = btnB.getText();
        btnB.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnBActionPerformed

    // Action taken when user presses "C" button.
    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
        letter = btnC.getText();
        btnC.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnCActionPerformed

    // Action taken when user presses "D" button.
    private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed
        letter = btnD.getText();
        btnD.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnDActionPerformed

    // Action taken when user presses "E" button.
    private void btnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEActionPerformed
        letter = btnE.getText();
        btnE.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnEActionPerformed

    // Action taken when user presses "F" button.
    private void btnFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFActionPerformed
        letter = btnF.getText();
        btnF.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnFActionPerformed

    // Action taken when user presses "G" button.
    private void btnGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGActionPerformed
        letter = btnG.getText();
        btnG.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnGActionPerformed

    // Action taken when user presses "H" button.
    private void btnHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHActionPerformed
        letter = btnH.getText();
        btnH.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnHActionPerformed

    // Action taken when user presses "I" button.
    private void btnIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIActionPerformed
        letter = btnI.getText();
        btnI.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnIActionPerformed

    // Action taken when user presses "J" button.
    private void btnJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJActionPerformed
        letter = btnJ.getText();
        btnJ.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnJActionPerformed

    // Action taken when user presses "K" button.
    private void btnKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKActionPerformed
        letter = btnK.getText();
        btnK.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnKActionPerformed

    // Action taken when user presses "L" button.
    private void btnLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLActionPerformed
        letter = btnL.getText();
        btnL.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnLActionPerformed

    // Action taken when user presses "M" button.
    private void btnMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMActionPerformed
        letter = btnM.getText();
        btnM.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnMActionPerformed

    // Action taken when user presses "N" button.
    private void btnNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNActionPerformed
        letter = btnN.getText();
        btnN.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnNActionPerformed

    // Action taken when user presses "O" button.
    private void btnOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOActionPerformed
        letter = btnO.getText();
        btnO.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnOActionPerformed

    // Action taken when user presses "P" button.
    private void btnPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPActionPerformed
        letter = btnP.getText();
        btnP.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnPActionPerformed
    
    // Action taken when user presses "Q" button.
    private void btnQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQActionPerformed
        letter = btnQ.getText();
        btnQ.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnQActionPerformed

    // Action taken when user presses "R" button.
    private void btnRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRActionPerformed
        letter = btnR.getText();
        btnR.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnRActionPerformed

    // Action taken when user presses "S" button.
    private void btnSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSActionPerformed
        letter = btnS.getText();
        btnS.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnSActionPerformed

    // Action taken when user presses "T" button.
    private void btnTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTActionPerformed
        letter = btnT.getText();
        btnT.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnTActionPerformed

    // Action taken when user presses "U" button.
    private void btnUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUActionPerformed
        letter = btnU.getText();
        btnU.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnUActionPerformed

    // Action taken when user presses "V" button.
    private void btnVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVActionPerformed
        letter = btnV.getText();
        btnV.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnVActionPerformed

    // Action taken when user presses "W" button.
    private void btnWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWActionPerformed
        letter = btnW.getText();
        btnW.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnWActionPerformed

    // Action taken when user presses "X" button.
    private void btnXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXActionPerformed
        letter = btnX.getText();
        btnX.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnXActionPerformed

    // Action taken when user presses "Y" button.
    private void btnYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYActionPerformed
        letter = btnY.getText();
        btnY.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnYActionPerformed

    // Action taken when user presses "Z" button.
    private void btnZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZActionPerformed
        letter = btnZ.getText();
        btnZ.setEnabled(false);
        gamePlay(letter);
    }//GEN-LAST:event_btnZActionPerformed

    // Action taken when user presses "Start" button.
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        start();
        
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        menu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(playScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(playScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(playScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(playScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new playScreen().setVisible(true);
            }
        });
    }
    
    /*
    This function takes in the integer parameter wordLength, to find out the number of
    words wanted in each game. It returns a random word with that length.
    */
    private String setWord(int wordLength) {
        // Use random to pick a word in the database.
        Random wordChoose = new Random();
        return words[wordLength-1][wordChoose.nextInt(20)];
    }
    
    /*
    This function takes in the string parameter letter, and compares it to the word.
    It reveals the matches to the hidden word, and updates the Word Box. It returns
    whether the player has found a letter that matches or not.
    */
    private boolean checkMatches(String letter) {
        char tempChar; // Temporarily stores character in letter.
        String tempLetter; // Temporary stroes string of character in letter.
        String temp = ""; // Temporary string for output.
        boolean foundLetter = false;
        
        // Loops the letter through the word.
        for (int i = 0; i < wordSet.length(); i++) {
            tempChar = wordSet.charAt(i); // Get character at word index.
            tempLetter = Character.toString(tempChar); // Convert to string.
            
            // If the selected letter matches a hidden letter.
            if (letter.equals(tempLetter)) {
                chosenWord.set(i,letter); // The blank is set to the letter (letter is "revealed").
                lettersLeft -= 1; // The number of letters yet to be found decreases by 1.
                foundLetter = true; // The user has found a letter.
            }
            
            // Adds letter/blank to string.
            temp += chosenWord.get(i);
        }
        
        // Updates Word Box.
        txtWordBox.setText(temp);
        return foundLetter; // Return whether letter has been found.
    }
    
    /*
    This function takes in the integer parameter a, which tells it how many times
    the use has guessed wrong. It updates the program with the proper hangman image,
    and returns true if the game should continue, and false if the game is over.
    */
    private boolean wrongLetter(int a){
        if (a == 1) {
            lblHangmanImage.setIcon(hangman1); // Set image to updated one.
            return true;
        } else if (a == 2) {
            lblHangmanImage.setIcon(hangman2);
            return true;
        } else if (a == 3) {
            lblHangmanImage.setIcon(hangman3);
            return true;
        } else if (a == 4) {
            lblHangmanImage.setIcon(hangman4);
            return true;
        } else if (a == 5) {
            lblHangmanImage.setIcon(hangman5);
            return true;
        } else if (a == 6) {
            lblHangmanImage.setIcon(hangman6);
            return false;
        }
        return true;
    }
    
    /*
    This function takes in the user's guessed letter and checks for matches
    and whether the game should continue.
    */
    private void gamePlay(String letter) {
        match = checkMatches(letter); // Calls match function to check for matches.
        // If there is no match, the number of wrong guesses increases.
        if (match == false) {
            wrong ++;
            // Wrong letter function is called to update image.
            gameCont = wrongLetter(wrong);
            //If the user has used up all their chances, the game is over.
            if (gameCont == false) {
                // Output losing message, invite user to play again.
                txtWordBox.setText("You lose. Press start to play again.");
                wrong=0;
                gameOver.setVisible(true);
                wins=0;
            }
        }
        // If all the letters have been guessed, output winning message, invite user to play again.
        if (lettersLeft == 0) {
            txtWordBox.setText("You win! Press start to play again.");
            wrong=0;
            gameOver.setVisible(true);
            wins++;
            gameOver.setWins(wins);
        }
    }
    
    //Refreshes the screen.
    public void start(){
        String temp = ""; // Temporary string to store chosen word.
        int spaces = 0; // Counts the number of space in the word.
        int wordLength=menu.getWordLength();
        
        lblHangmanImage.setIcon(gallow); // Set image to gallow.
        chosenWord.clear(); // Clears the chosenWord arraylist for new word.
        
        wordSet = setWord(wordLength); // Calls setWord function to get a random word.
        
        // Loops through length of word and adds a blank for each letter for the hidden word.
        for (int i = 0; i < wordSet.length(); i++) {
            // If the character is a space, add a space instead of a blank.
            if (Character.toString(wordSet.charAt(i)).equals(" ")) {
                chosenWord.add(" ");
                spaces += 1; // Number of spaces has increased.
            } else {
                chosenWord.add("-");
            }
        }
        lettersLeft = wordSet.length() - spaces; // Calculate the number of letters the player must guess.
        
        // Loops through the hidden word, puts all its blanks and spaces in a variable.
        for (int i = 0; i < chosenWord.size(); i++) {
           temp += chosenWord.get(i);
        }
        // Output the hidden word in the Word Box.
        txtWordBox.setText(temp);
        
        // Enable all letter buttons.
        btnA.setEnabled(true);
        btnB.setEnabled(true);
        btnC.setEnabled(true);
        btnD.setEnabled(true);
        btnE.setEnabled(true);
        btnA.setEnabled(true);
        btnB.setEnabled(true);
        btnC.setEnabled(true);
        btnD.setEnabled(true);
        btnE.setEnabled(true);
        btnF.setEnabled(true);
        btnG.setEnabled(true);
        btnH.setEnabled(true);
        btnI.setEnabled(true);
        btnJ.setEnabled(true);
        btnK.setEnabled(true);
        btnL.setEnabled(true);
        btnM.setEnabled(true);
        btnN.setEnabled(true);
        btnO.setEnabled(true);
        btnP.setEnabled(true);
        btnQ.setEnabled(true);
        btnR.setEnabled(true);
        btnS.setEnabled(true);
        btnT.setEnabled(true);
        btnU.setEnabled(true);
        btnV.setEnabled(true);
        btnW.setEnabled(true);
        btnX.setEnabled(true);
        btnY.setEnabled(true);
        btnZ.setEnabled(true);
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnA;
    private javax.swing.JButton btnB;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnE;
    private javax.swing.JButton btnF;
    private javax.swing.JButton btnG;
    private javax.swing.JButton btnH;
    private javax.swing.JButton btnI;
    private javax.swing.JButton btnJ;
    private javax.swing.JButton btnK;
    private javax.swing.JButton btnL;
    private javax.swing.JButton btnM;
    private javax.swing.JButton btnN;
    private javax.swing.JButton btnO;
    private javax.swing.JButton btnP;
    private javax.swing.JButton btnQ;
    private javax.swing.JButton btnR;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnS;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnT;
    private javax.swing.JButton btnU;
    private javax.swing.JButton btnV;
    private javax.swing.JButton btnW;
    private javax.swing.JButton btnX;
    private javax.swing.JButton btnY;
    private javax.swing.JButton btnZ;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblHangmanImage;
    private javax.swing.JLabel lblHangmanText;
    private javax.swing.JTextField txtWordBox;
    // End of variables declaration//GEN-END:variables
}
